name: Build and Publish All Docker Images to GHCR

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
    tags:
      - 'v*.*.*' # Trigger on tags like v1.0.0 (applies to all images)

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Required for actions/checkout
      packages: write # Required to push to GHCR

    strategy:
      matrix:
        image:
          - dir: images/amber-0.4.0-alpha
            file: Alpine.Dockerfile
            tag: alpine-0.4.0-alpha
          - dir: images/amber-0.4.0-alpha
            file: Debian.Dockerfile
            tag: debian-0.4.0-alpha

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Amber
        run: |
          sudo tar --strip-components=1 -xf ./images/amber-0.4.0-alpha/amber-x86_64-unknown-linux-gnu.tar.xz -C /usr/bin
          sudo chmod +x /usr/bin/amber
          amber --version
          
      - name: Compile installation script
        run: amber build --minify ${{ matrix.image.dir }}/install.ab ${{ matrix.image.dir }}/install.sh

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # Uses the automatically provided token

      - name: Set up QEMU (for multi-platform builds)
        uses: docker/setup-qemu-action@v3
        # Required for building multi-architecture images (e.g., for ARM/Apple Silicon)

      - name: Set up Docker Buildx (for multi-platform builds)
        uses: docker/setup-buildx-action@v3
        # Required for building multi-architecture images

      - name: Extract metadata (tags, labels) for Docker images
        id: meta
        uses: docker/metadata-action@v5
        with:
          # Defines the full image name, including the organization and the image name from the matrix
          images: ghcr.io/${{ github.repository_owner }}/amber
          tags: ${{ matrix.image.tag }}

      - name: Build and push Docker images for
        uses: docker/build-push-action@v5
        with:
          # Context for the Docker build is the specific image directory
          context: ${{ matrix.image.dir }}
          # Path to the Dockerfile within that directory
          file: ${{ matrix.image.dir }}/${{ matrix.image.file }}
          platforms: linux/amd64
          # Set to true to push the image to GHCR
          push: true
          # Apply the tags generated by the metadata action
          tags: ${{ steps.meta.outputs.tags }}
          # Apply the labels generated by the metadata action
          labels: ${{ steps.meta.outputs.labels }}
          # Enable caching for faster builds
          cache-from: type=gha,scope=${{ matrix.image.tag }}
          cache-to: type=gha,mode=max,scope=${{ matrix.image.tag }}